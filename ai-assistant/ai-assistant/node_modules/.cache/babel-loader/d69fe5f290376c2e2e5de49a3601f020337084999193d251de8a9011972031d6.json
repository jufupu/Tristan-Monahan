{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tristan\\\\Documents\\\\Uni\\\\GitHub\\\\Tristan-Monahan\\\\ai-assistant\\\\ai-assistant\\\\src\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\n// ChatComponent.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const sendMessage = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) {\n        // Handle non-JSON error response\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      const data = await response.json();\n      setChatHistory([...chatHistory, {\n        user: message,\n        assistant: data.reply\n      }]);\n    } catch (error) {\n      console.error('Error:', error.message);\n      setChatHistory([...chatHistory, {\n        user: message,\n        assistant: 'Error communicating with the server.'\n      }]);\n    } finally {\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"You:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this), \" \", chat.user, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Assistant:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this), \" \", chat.assistant]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n_s(ChatComponent, \"zDyYl9zcQ28aTJ3euAUrq4qsGbA=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatComponent","_s","message","setMessage","chatHistory","setChatHistory","sendMessage","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","data","json","user","assistant","reply","error","console","children","map","chat","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tristan/Documents/Uni/GitHub/Tristan-Monahan/ai-assistant/ai-assistant/src/ChatComponent.js"],"sourcesContent":["   // ChatComponent.js\r\n   import React, { useState } from 'react';\r\n\r\n   const ChatComponent = () => {\r\n       const [message, setMessage] = useState('');\r\n       const [chatHistory, setChatHistory] = useState([]);\r\n\r\n       const sendMessage = async () => {\r\n           try {\r\n               const response = await fetch('http://localhost:5000/api/chat', {\r\n                   method: 'POST',\r\n                   headers: { 'Content-Type': 'application/json' },\r\n                   body: JSON.stringify({ message }),\r\n               });\r\n\r\n               if (!response.ok) {\r\n                   // Handle non-JSON error response\r\n                   const errorText = await response.text();\r\n                   throw new Error(errorText);\r\n               }\r\n\r\n               const data = await response.json();\r\n               setChatHistory([...chatHistory, { user: message, assistant: data.reply }]);\r\n           } catch (error) {\r\n               console.error('Error:', error.message);\r\n               setChatHistory([...chatHistory, { user: message, assistant: 'Error communicating with the server.' }]);\r\n           } finally {\r\n               setMessage('');\r\n           }\r\n       };\r\n\r\n       return (\r\n           <div>\r\n               <div>\r\n                   {chatHistory.map((chat, index) => (\r\n                       <div key={index}>\r\n                           <strong>You:</strong> {chat.user}\r\n                           <br />\r\n                           <strong>Assistant:</strong> {chat.assistant}\r\n                       </div>\r\n                   ))}\r\n               </div>\r\n               <input\r\n                   type=\"text\"\r\n                   value={message}\r\n                   onChange={(e) => setMessage(e.target.value)}\r\n                   placeholder=\"Type your message...\"\r\n               />\r\n               <button onClick={sendMessage}>Send</button>\r\n           </div>\r\n       );\r\n   };\r\n\r\n   export default ChatComponent;"],"mappings":";;AAAG;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAQ,CAAC;MACpC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QACd;QACA,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAAC;MAC9B;MAEA,MAAMG,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCd,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;QAAEgB,IAAI,EAAElB,OAAO;QAAEmB,SAAS,EAAEH,IAAI,CAACI;MAAM,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACrB,OAAO,CAAC;MACtCG,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;QAAEgB,IAAI,EAAElB,OAAO;QAAEmB,SAAS,EAAE;MAAuC,CAAC,CAAC,CAAC;IAC1G,CAAC,SAAS;MACNlB,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EACKrB,WAAW,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzB7B,OAAA;QAAA0B,QAAA,gBACI1B,OAAA;UAAA0B,QAAA,EAAQ;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACL,IAAI,CAACP,IAAI,eAChCrB,OAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjC,OAAA;UAAA0B,QAAA,EAAQ;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACL,IAAI,CAACN,SAAS;MAAA,GAHrCO,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNjC,OAAA;MACIkC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhC,OAAQ;MACfiC,QAAQ,EAAGC,CAAC,IAAKjC,UAAU,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFjC,OAAA;MAAQwC,OAAO,EAAEjC,WAAY;MAAAmB,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAhDID,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}