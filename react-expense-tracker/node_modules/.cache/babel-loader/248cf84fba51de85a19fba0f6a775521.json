{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport './NewExpense.css';\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const onSaveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  }; // return (\n  // <div className=\"new-expense\">\n  //     {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n  //     {!isEditing && <ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler} />}\n  // </div>\n  // );\n\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/Users/Tristan/Documents/Uni/4th year/Hons Project/Developement/React/my-app/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","onSaveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","startEditingHandler"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,wBAAwB,GAAIC,kBAAD,IAAwB;AACrD,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFY,KAApB;AAIAT,IAAAA,KAAK,CAACU,YAAN,CAAmBL,WAAnB;AACH,GAND;;AAQA,QAAMM,mBAAmB,GAAG,MAAM;AAC9BT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD,CAX0B,CAe1B;AACA;AACA;AACA;AACA;AACA;;AACH,CArBD;;GAAMH,U;;KAAAA,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    // return (\r\n    // <div className=\"new-expense\">\r\n    //     {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n    //     {!isEditing && <ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler} />}\r\n    // </div>\r\n    // );\r\n};\r\n\r\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}